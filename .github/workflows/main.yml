name: CI
on: workflow_dispatch

jobs:
  # build_envoy_alpine_amd64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout step
  #       id: checkout
  #       uses: actions/checkout@v2

  #     # Hacky solution to resolve running out of disk space
  #     # https://github.com/actions/virtual-environments/issues/2840#issuecomment-790492173
  #     - name: make space
  #       run: |
  #         sudo rm -rf /usr/share/dotnet
  #         sudo rm -rf /opt/ghc
  #         sudo rm -rf "/usr/local/share/boost"
  #         sudo rm -rf "$AGENT_TOOLSDIRECTORY"

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1.6.0
        
  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: docker buildx
  #       uses: docker/build-push-action@v2.7.0
  #       with:
  #         context: .
  #         push: false
  #         load: true
  #         tags: envoy-builder:v1.22.0
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new

  #     - name: Cache Bazel
  #       uses: actions/cache@v2
  #       with:
  #         path: /home/runner/work/gha-bazel/gha-bazel/.cache/bazel
  #         key: ${{ runner.os }}-bazel-cache-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-bazel-cache-

  #     - name: Build step
  #       id: build
  #       uses: ./.github/actions/bazel-build

  #     - name: copy binary
  #       run: |
  #         mkdir -p ./build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine
  #         id=$(docker create envoy-builder:${envoyTag})
  #         docker cp "$id":/envoy/bazel-bin/contrib/exe ./build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine
  #         docker rm -v "$id"
  #       env:
  #         envoyTag: v1.22.0

  #     - name: Zip artifact
  #       run: |
  #         if [[ -f build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine ]]; then  
  #             tar -czvf build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine.tar.gz build/artifacts-linux-amd64/envoy/envoy-${envoyTag#v}-alpine
  #         fi
  #       env:
  #         envoyTag: v1.22.0
      
  #     - name: Save artifact
  #       uses: actions/upload-artifact@v3
  #       id: save_artifacts
  #       with:
  #         name: artifacts
  #         path: |
  #           build/**/envoy/*.tar.gz

  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    build_envoy_windows_amd64:
      runs-on: windows-2019
      defaults:
        run:
          shell: bash
      steps:
        - name: Add msbuild to PATH
          uses: microsoft/setup-msbuild@v1.1
          with:
            msbuild-architecture: x64

        - name: wtf
          run: ls -lsa

        # - name: make space
        #   run: |
        #     pwd
        #     ls -l
        #     df -k .
        #     rm -rf Amazon
        #     rm -rf Mercurial
        #     rm -rf MongoDB
        #     rm -rf Mozilla Firefox
        #     rm -rf PostgreSQL
        #     rm -rf R
        #     rm -rf internet explorer
        #     df -k .
        #   working-directory: C:\Program Files

        # - name: Checkout step
        #   id: checkout
        #   uses: actions/checkout@v2

        # # - name: prepare env
        # #   shell: pwsh
        # #   run: |
        # #     .\windows.ps1

        # - name: Install Python dependencies
        #   uses: py-actions/py-dependency-install@v3

        # - uses: seanmiddleditch/gha-setup-ninja@master
        # - uses: ilammy/msvc-dev-cmd@v1

        # - name: set env
        #   shell: cmd
        #   run: |
        #     set BAZEL_VC=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\BuildTools\VC
        #     set PreferredToolArchitecture=x64
        #     set BAZEL_VC=%USERPROFILE%\VSBT2019\VC
        #     set PATH=%USERPROFILE%\VSBT2019\VC\Tools\MSVC\14.26.28801\bin\Hostx64\x64;%PATH%
        #     set PATH=%USERPROFILE%\msys64\usr\bin;%PATH%
        #     set BAZEL_SH=%USERPROFILE%\msys64\usr\bin\bash.exe
        #     set MSYS2_ARG_CONV_EXCL=*
        #     set MSYS2_PATH_TYPE=inherit
        #     set TMPDIR=C:/Windows/TEMP
        #     mklink /d C:\c C:\
        #     set PATH=%USERPROFILE%\Git\bin;%PATH%
        #     setx PATH "%PATH%"
        #     setx BAZEL_SH "%BAZEL_SH%"
        #     setx MSYS2_ARG_CONV_EXCL "%MSYS2_ARG_CONV_EXCL%"
        #     setx BAZEL_VC "%BAZEL_VC%"
        #     setx TMPDIR "%TMPDIR%"
        #     setx MSYS2_PATH_TYPE "%MSYS2_PATH_TYPE%"

        # - name: env
        #   run: env
        
        # - name: download envoy sources
        #   id: envoy-sources
        #   run: |
        #     mkdir -p envoy-sources
        #     cd envoy-sources
        #     git init .
        #     git remote add origin https://github.com/envoyproxy/envoy.git

        # - name: Build Envoy
        #   working-directory: envoy-sources
        #   env:
        #     # https://docs.bazel.build/versions/main/memory-saving-mode.html
        #     BAZEL_STARTUP_OPTIONS: >-
        #       --host_jvm_args=-Xmx4g

        #     BAZEL_BUILD_OPTIONS: >-
        #       --jobs=3
        #       --local_ram_resources=HOST_RAM*.99
        #       --local_cpu_resources=2
        #       --discard_analysis_cache
        #       --notrack_incremental_state
        #       --nokeep_state_after_build

        #   run: |
        #     bazel ${BAZEL_STARTUP_OPTIONS[@]} build ${BAZEL_BUILD_OPTIONS[@]} -c opt //source/exe:envoy-static

        # - name: Archive production artifacts
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: envoy_${{ github.sha }}
        #     path: |
        #       C:/build/envoy/source/exe/envoy.exe